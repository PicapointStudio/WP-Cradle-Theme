$screen-breakpoints: (
  xtrasmall: $xsmall,
  small: $small,
  medium: $medium,
  large: $large,
  xlarge: $xlarge,
  xxlarge: $xxlarge
);
$browser-context: 10px;


@function em($pixels, $context: $browser-context) {
    @return ($pixels/($context*1))+rem;
}

$breakpoints-keys: map-keys($screen-breakpoints);
$breakpoints-values: map-values($screen-breakpoints);
@for $i from 1 to length($breakpoints-keys)+1 {
  @if $i < length($breakpoints-keys) {
    .show-for-#{nth($breakpoints-keys, $i)} {
      @media (max-width: em(nth($breakpoints-values, $i))) {
        display: none;
      }
    }
    .show-#{nth($breakpoints-keys, $i)}-only {
        @media (max-width: em(nth($breakpoints-values, 1))) and (min-width: em(nth($breakpoints-values, $i))) {
          display: none;
        }
        @media (min-width: em(nth($breakpoints-values, $i))) and (max-width: em(nth($breakpoints-values, $i+1))) {
            display: inherit;
        }
        @media (min-width: em(nth($breakpoints-values, $i+1))) and (max-width: em(nth($breakpoints-values, 6))) {
            display: none;
        }
      }
    .hide-for-#{nth($breakpoints-keys, $i)}-only {
      @media (min-width: em(nth($breakpoints-values, $i))) and (max-width: em(nth($breakpoints-values, $i+1))) {
        display: none !important;
      }
    }
    .hide-for-#{nth($breakpoints-keys, $i)}-only {
        @media (min-width: em(nth($breakpoints-values, $i))) and (max-width: em(nth($breakpoints-values, $i+1))) {
          display: none !important;
        }
    }
    .hide-for-#{nth($breakpoints-keys, $i)} {
        @media (max-width: em(nth($breakpoints-values, 1))) and (min-width: em(nth($breakpoints-values, $i))) {
          display: inherit;
        }
        @media (min-width: em(nth($breakpoints-values, $i))) and (max-width: em(nth($breakpoints-values, $i+1))) {
            display: none;
        }
        @media (min-width: em(nth($breakpoints-values, $i+1))) and (max-width: em(nth($breakpoints-values, 6))) {
            display: inherit;
        }
    }
  }
}